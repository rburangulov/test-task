apiVersion: v1
kind: Namespace
metadata:
  name: "test-task"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: test-task
  labels:
    app: zookeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeper
  serviceName: "zookeper"
  template:
    metadata:
      labels:
        app: zookeper
    spec:
      containers:
      - name: zoo1
        image: digitalwonderland/zookeeper
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_ID
          value: "1"
        - name: ZOOKEEPER_SERVER_1
          value: zookeper
---
apiVersion: v1
kind: Service
metadata:
  name: zookeper
  namespace: test-task
  labels:
    app: zookeeper
spec:
  ports:
  - port: 2181
    targetPort: 2181
    protocol: TCP
    name: port
  selector:
    app: zookeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: test-task
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  serviceName: "kafka"
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka:2.11-2.0.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_CREATE_TOPICS
          value: "input:1:1,output:1:1"
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: test-task
  labels:
    app: kafka
spec:
  ports:
  - port: 9092
    targetPort: 9092
    protocol: TCP
    name: port
  selector:
    app: kafka
